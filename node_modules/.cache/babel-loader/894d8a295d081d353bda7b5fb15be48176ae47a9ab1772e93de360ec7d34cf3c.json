{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Work project\\\\my-app\\\\my-app\\\\src\\\\components\\\\OurCategories\\\\categoriesNav\\\\categoriesNav.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport \"./categoriesNav.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoriesNav = ({\n  navbarId\n}) => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(\"\"); // إدارة الفئة المختارة\n  const [showDropdown, setShowDropdown] = useState(false); // لإظهار أو إخفاء القائمة المنسدلة في الشاشات الصغيرة\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 820); // متابعة حالة حجم الشاشة\n  const location = useLocation(); // للحصول على المسار الحالي\n\n  // تعريف الفئات باستخدام useMemo\n  const categories = useMemo(() => [{\n    name: \"Cars\",\n    path: \"/car\"\n  }, {\n    name: \"Property\",\n    path: \"/property\"\n  }, {\n    name: \"Services\",\n    path: \"/services\"\n  }, {\n    name: \"Furniture\",\n    path: \"/furniture\"\n  }, {\n    name: \"Camping\",\n    path: \"/camping\"\n  }, {\n    name: \"Gifts\",\n    path: \"/gifts\"\n  }, {\n    name: \"Contracting\",\n    path: \"/Contracting\"\n  }, {\n    name: \"Family\",\n    path: \"/family\"\n  }, {\n    name: \"Animals\",\n    path: \"/animal\"\n  }, {\n    name: \"Electronics\",\n    path: \"/electronics\"\n  }, {\n    name: \"Jobs\",\n    path: \"/jobs\"\n  }, {\n    name: \"Others\",\n    path: \"/other\"\n  }], []); // الفئات ثابتة ولا تتغير لذا يمكن استخدام useMemo بدون إضافتها كاعتماديات\n\n  // تحديث الفئة المختارة بناءً على المسار\n  useEffect(() => {\n    const category = categories.find(cat => location.pathname.includes(cat.path));\n    if (category) {\n      setSelectedCategory(category.name); // تحديث النص في الزر عند التغيير في المسار\n    }\n  }, [location.pathname, categories]);\n\n  // تحديث حالة حجم الشاشة عند التغيير\n  useEffect(() => {\n    const handleResize = () => setIsMobile(window.innerWidth <= 820);\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // استخدام useCallback لتحسين الأداء\n  const handleCategorySelect = useCallback(categoryName => {\n    setSelectedCategory(categoryName);\n    setShowDropdown(false);\n  }, []);\n\n  // مكون عرض القائمة\n  const renderCategoriesList = isMobileView => /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: `categories-list2 ${isMobileView ? \"mobile\" : \"desktop\"}`,\n    children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"category-link\",\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: category.path,\n        className: ({\n          isActive\n        }) => isActive ? \"active\" : \"\",\n        onClick: () => handleCategorySelect(category.name),\n        children: category.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"categories-navbar\",\n    id: navbarId,\n    children: [isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"category-select-button\",\n      onClick: () => setShowDropdown(!showDropdown) // عند الضغط على الزر يتم التبديل بين إظهار وإخفاء القائمة المنسدلة\n      ,\n      children: selectedCategory || \"اختيار الفئة\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), isMobile && showDropdown && renderCategoriesList(true), !isMobile && renderCategoriesList(false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoriesNav, \"SGAyj+VTizvcUsvT8HtH105EgNA=\", false, function () {\n  return [useLocation];\n});\n_c = CategoriesNav;\nexport default CategoriesNav;\nvar _c;\n$RefreshReg$(_c, \"CategoriesNav\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","NavLink","useLocation","jsxDEV","_jsxDEV","CategoriesNav","navbarId","_s","selectedCategory","setSelectedCategory","showDropdown","setShowDropdown","isMobile","setIsMobile","window","innerWidth","location","categories","name","path","category","find","cat","pathname","includes","handleResize","addEventListener","removeEventListener","handleCategorySelect","categoryName","renderCategoriesList","isMobileView","className","children","map","index","to","isActive","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/sarah/OneDrive/Documents/Work project/my-app/my-app/src/components/OurCategories/categoriesNav/categoriesNav.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport \"./categoriesNav.css\";\r\n\r\nconst CategoriesNav = ({ navbarId }) => {\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\"); // إدارة الفئة المختارة\r\n  const [showDropdown, setShowDropdown] = useState(false); // لإظهار أو إخفاء القائمة المنسدلة في الشاشات الصغيرة\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 820); // متابعة حالة حجم الشاشة\r\n  const location = useLocation(); // للحصول على المسار الحالي\r\n\r\n  // تعريف الفئات باستخدام useMemo\r\n  const categories = useMemo(() => [\r\n    { name: \"Cars\", path: \"/car\" },\r\n    { name: \"Property\", path: \"/property\" },\r\n    { name: \"Services\", path: \"/services\" },\r\n    { name: \"Furniture\", path: \"/furniture\" },\r\n    { name: \"Camping\", path: \"/camping\" },\r\n    { name: \"Gifts\", path: \"/gifts\" },\r\n    { name: \"Contracting\", path: \"/Contracting\" },\r\n    { name: \"Family\", path: \"/family\" },\r\n    { name: \"Animals\", path: \"/animal\" },\r\n    { name: \"Electronics\", path: \"/electronics\" },\r\n    { name: \"Jobs\", path: \"/jobs\" },\r\n    { name: \"Others\", path: \"/other\" },\r\n  ], []); // الفئات ثابتة ولا تتغير لذا يمكن استخدام useMemo بدون إضافتها كاعتماديات\r\n\r\n  // تحديث الفئة المختارة بناءً على المسار\r\n  useEffect(() => {\r\n    const category = categories.find((cat) => location.pathname.includes(cat.path));\r\n    if (category) {\r\n      setSelectedCategory(category.name); // تحديث النص في الزر عند التغيير في المسار\r\n    }\r\n  }, [location.pathname, categories]);\r\n\r\n  // تحديث حالة حجم الشاشة عند التغيير\r\n  useEffect(() => {\r\n    const handleResize = () => setIsMobile(window.innerWidth <= 820);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // استخدام useCallback لتحسين الأداء\r\n  const handleCategorySelect = useCallback((categoryName) => {\r\n    setSelectedCategory(categoryName); \r\n    setShowDropdown(false); \r\n  }, []);\r\n\r\n  // مكون عرض القائمة\r\n  const renderCategoriesList = (isMobileView) => (\r\n    <ul className={`categories-list2 ${isMobileView ? \"mobile\" : \"desktop\"}`}>\r\n      {categories.map((category, index) => (\r\n        <li key={index} className=\"category-link\">\r\n          <NavLink\r\n            to={category.path}\r\n            className={({ isActive }) => (isActive ? \"active\" : \"\")}\r\n            onClick={() => handleCategorySelect(category.name)}\r\n          >\r\n            {category.name}\r\n          </NavLink>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <div className=\"categories-navbar\" id={navbarId}>\r\n      {/* زر اختيار الفئة في الشاشات الصغيرة */}\r\n      {isMobile && (\r\n        <button\r\n          className=\"category-select-button\"\r\n          onClick={() => setShowDropdown(!showDropdown)} // عند الضغط على الزر يتم التبديل بين إظهار وإخفاء القائمة المنسدلة\r\n        >\r\n          {selectedCategory || \"اختيار الفئة\"}\r\n        </button>\r\n      )}\r\n\r\n      {/* القائمة المنسدلة في الشاشات الصغيرة */}\r\n      {isMobile && showDropdown && renderCategoriesList(true)}\r\n\r\n      {/* في الشاشات العادية (أكبر من 820px)، تظهر القائمة من دون الزر */}\r\n      {!isMobile && renderCategoriesList(false)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoriesNav;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}