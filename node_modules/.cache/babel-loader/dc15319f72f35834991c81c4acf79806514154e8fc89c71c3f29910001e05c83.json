{"ast":null,"code":"import React,{useState,useEffect,useMemo,useCallback}from\"react\";import{NavLink,useLocation}from\"react-router-dom\";import\"./categoriesNav.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CategoriesNav=_ref=>{let{navbarId}=_ref;const[selectedCategory,setSelectedCategory]=useState(\"\");// إدارة الفئة المختارة\nconst[showDropdown,setShowDropdown]=useState(false);// لإظهار أو إخفاء القائمة المنسدلة في الشاشات الصغيرة\nconst[isMobile,setIsMobile]=useState(window.innerWidth<=820);// متابعة حالة حجم الشاشة\nconst location=useLocation();// للحصول على المسار الحالي\n// تعريف الفئات باستخدام useMemo\nconst categories=useMemo(()=>[{name:\"Cars\",path:\"/car\"},{name:\"Property\",path:\"/property\"},{name:\"Services\",path:\"/services\"},{name:\"Furniture\",path:\"/furniture\"},{name:\"Camping\",path:\"/camping\"},{name:\"Gifts\",path:\"/gifts\"},{name:\"Contracting\",path:\"/Contracting\"},{name:\"Family\",path:\"/family\"},{name:\"Animals\",path:\"/animal\"},{name:\"Electronics\",path:\"/electronics\"},{name:\"Jobs\",path:\"/jobs\"},{name:\"Others\",path:\"/other\"}],[]);// الفئات ثابتة ولا تتغير لذا يمكن استخدام useMemo بدون إضافتها كاعتماديات\n// تحديث الفئة المختارة بناءً على المسار\nuseEffect(()=>{const category=categories.find(cat=>location.pathname.includes(cat.path));if(category){setSelectedCategory(category.name);// تحديث النص في الزر عند التغيير في المسار\n}},[location.pathname,categories]);// تحديث حالة حجم الشاشة عند التغيير\nuseEffect(()=>{const handleResize=()=>setIsMobile(window.innerWidth<=820);window.addEventListener(\"resize\",handleResize);return()=>window.removeEventListener(\"resize\",handleResize);},[]);// استخدام useCallback لتحسين الأداء\nconst handleCategorySelect=useCallback(categoryName=>{setSelectedCategory(categoryName);setShowDropdown(false);},[]);// مكون عرض القائمة\nconst renderCategoriesList=isMobileView=>/*#__PURE__*/_jsx(\"ul\",{className:`categories-list2 ${isMobileView?\"mobile\":\"desktop\"}`,children:categories.map((category,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"category-link\",children:/*#__PURE__*/_jsx(NavLink,{to:category.path,className:_ref2=>{let{isActive}=_ref2;return isActive?\"active\":\"\";},onClick:()=>handleCategorySelect(category.name),children:category.name})},index))});return/*#__PURE__*/_jsxs(\"div\",{className:\"categories-navbar\",id:navbarId,children:[isMobile&&/*#__PURE__*/_jsx(\"button\",{className:\"category-select-button\",onClick:()=>setShowDropdown(!showDropdown)// عند الضغط على الزر يتم التبديل بين إظهار وإخفاء القائمة المنسدلة\n,children:selectedCategory||\"اختيار الفئة\"}),isMobile&&showDropdown&&renderCategoriesList(true),!isMobile&&renderCategoriesList(false)]});};export default CategoriesNav;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","NavLink","useLocation","jsx","_jsx","jsxs","_jsxs","CategoriesNav","_ref","navbarId","selectedCategory","setSelectedCategory","showDropdown","setShowDropdown","isMobile","setIsMobile","window","innerWidth","location","categories","name","path","category","find","cat","pathname","includes","handleResize","addEventListener","removeEventListener","handleCategorySelect","categoryName","renderCategoriesList","isMobileView","className","children","map","index","to","_ref2","isActive","onClick","id"],"sources":["C:/Users/sarah/OneDrive/Documents/Work project/my-app/my-app/src/components/OurCategories/categoriesNav/categoriesNav.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport \"./categoriesNav.css\";\r\n\r\nconst CategoriesNav = ({ navbarId }) => {\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\"); // إدارة الفئة المختارة\r\n  const [showDropdown, setShowDropdown] = useState(false); // لإظهار أو إخفاء القائمة المنسدلة في الشاشات الصغيرة\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 820); // متابعة حالة حجم الشاشة\r\n  const location = useLocation(); // للحصول على المسار الحالي\r\n\r\n  // تعريف الفئات باستخدام useMemo\r\n  const categories = useMemo(() => [\r\n    { name: \"Cars\", path: \"/car\" },\r\n    { name: \"Property\", path: \"/property\" },\r\n    { name: \"Services\", path: \"/services\" },\r\n    { name: \"Furniture\", path: \"/furniture\" },\r\n    { name: \"Camping\", path: \"/camping\" },\r\n    { name: \"Gifts\", path: \"/gifts\" },\r\n    { name: \"Contracting\", path: \"/Contracting\" },\r\n    { name: \"Family\", path: \"/family\" },\r\n    { name: \"Animals\", path: \"/animal\" },\r\n    { name: \"Electronics\", path: \"/electronics\" },\r\n    { name: \"Jobs\", path: \"/jobs\" },\r\n    { name: \"Others\", path: \"/other\" },\r\n  ], []); // الفئات ثابتة ولا تتغير لذا يمكن استخدام useMemo بدون إضافتها كاعتماديات\r\n\r\n  // تحديث الفئة المختارة بناءً على المسار\r\n  useEffect(() => {\r\n    const category = categories.find((cat) => location.pathname.includes(cat.path));\r\n    if (category) {\r\n      setSelectedCategory(category.name); // تحديث النص في الزر عند التغيير في المسار\r\n    }\r\n  }, [location.pathname, categories]);\r\n\r\n  // تحديث حالة حجم الشاشة عند التغيير\r\n  useEffect(() => {\r\n    const handleResize = () => setIsMobile(window.innerWidth <= 820);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // استخدام useCallback لتحسين الأداء\r\n  const handleCategorySelect = useCallback((categoryName) => {\r\n    setSelectedCategory(categoryName); \r\n    setShowDropdown(false); \r\n  }, []);\r\n\r\n  // مكون عرض القائمة\r\n  const renderCategoriesList = (isMobileView) => (\r\n    <ul className={`categories-list2 ${isMobileView ? \"mobile\" : \"desktop\"}`}>\r\n      {categories.map((category, index) => (\r\n        <li key={index} className=\"category-link\">\r\n          <NavLink\r\n            to={category.path}\r\n            className={({ isActive }) => (isActive ? \"active\" : \"\")}\r\n            onClick={() => handleCategorySelect(category.name)}\r\n          >\r\n            {category.name}\r\n          </NavLink>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <div className=\"categories-navbar\" id={navbarId}>\r\n      {/* زر اختيار الفئة في الشاشات الصغيرة */}\r\n      {isMobile && (\r\n        <button\r\n          className=\"category-select-button\"\r\n          onClick={() => setShowDropdown(!showDropdown)} // عند الضغط على الزر يتم التبديل بين إظهار وإخفاء القائمة المنسدلة\r\n        >\r\n          {selectedCategory || \"اختيار الفئة\"}\r\n        </button>\r\n      )}\r\n\r\n      {/* القائمة المنسدلة في الشاشات الصغيرة */}\r\n      {isMobile && showDropdown && renderCategoriesList(true)}\r\n\r\n      {/* في الشاشات العادية (أكبر من 820px)، تظهر القائمة من دون الزر */}\r\n      {!isMobile && renderCategoriesList(false)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoriesNav;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}