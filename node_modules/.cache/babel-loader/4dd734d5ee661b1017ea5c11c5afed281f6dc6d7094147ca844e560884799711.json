{"ast":null,"code":"export const API_URL = \"https://kwtmarkets.net/back/items\";\n\n/**\r\n * دالة لجلب جميع العناصر مع `status=act` فقط\r\n * تستخدم في المنتجات الموصى بها.\r\n */\nexport async function fetchRecommendedProducts() {\n  try {\n    const response = await fetch(`${API_URL}?status=act`);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch recommended products\");\n    }\n    return await response.json();\n  } catch (err) {\n    throw new Error(err.message);\n  }\n}\n\n/**\r\n * دالة لجلب البيانات بناءً على الفئة أو نص البحث.\r\n * تستخدم في عمليات البحث أو التصفية.\r\n * \r\n * @param {string} category - اسم الفئة.\r\n * @param {string} searchQuery - نص البحث.\r\n * @returns {Promise<Array>} - قائمة العناصر التي تم تصفيتها.\r\n */\nexport async function fetchData(category, searchQuery) {\n  try {\n    const response = await fetch(`${API_URL}?status=act`);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch data\");\n    }\n    const result = await response.json();\n\n    // تصفية البيانات بناءً على الفئة\n    let filteredData = result;\n    if (category) {\n      filteredData = result.filter(item => item.category === category);\n    }\n\n    // إضافة وظيفة البحث\n    if (searchQuery && searchQuery.trim()) {\n      filteredData = filteredData.filter(item => item.name.toLowerCase().includes(searchQuery.toLowerCase()) || item.description.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n    return filteredData;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n}","map":{"version":3,"names":["API_URL","fetchRecommendedProducts","response","fetch","ok","Error","json","err","message","fetchData","category","searchQuery","result","filteredData","filter","item","trim","name","toLowerCase","includes","description"],"sources":["C:/Users/sarah/OneDrive/Documents/Work project/my-app/my-app/src/components/Api/dataApi.js"],"sourcesContent":["export const API_URL = \"https://kwtmarkets.net/back/items\";\r\n\r\n/**\r\n * دالة لجلب جميع العناصر مع `status=act` فقط\r\n * تستخدم في المنتجات الموصى بها.\r\n */\r\nexport async function fetchRecommendedProducts() {\r\n  try {\r\n    const response = await fetch(`${API_URL}?status=act`);\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch recommended products\");\r\n    }\r\n    return await response.json();\r\n  } catch (err) {\r\n    throw new Error(err.message);\r\n  }\r\n}\r\n\r\n/**\r\n * دالة لجلب البيانات بناءً على الفئة أو نص البحث.\r\n * تستخدم في عمليات البحث أو التصفية.\r\n * \r\n * @param {string} category - اسم الفئة.\r\n * @param {string} searchQuery - نص البحث.\r\n * @returns {Promise<Array>} - قائمة العناصر التي تم تصفيتها.\r\n */\r\nexport async function fetchData(category, searchQuery) {\r\n  try {\r\n    const response = await fetch(`${API_URL}?status=act`);\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to fetch data\");\r\n    }\r\n    const result = await response.json();\r\n\r\n    // تصفية البيانات بناءً على الفئة\r\n    let filteredData = result;\r\n    if (category) {\r\n      filteredData = result.filter((item) => item.category === category);\r\n    }\r\n\r\n    // إضافة وظيفة البحث\r\n    if (searchQuery && searchQuery.trim()) {\r\n      filteredData = filteredData.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n          item.description.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n    }\r\n\r\n    return filteredData;\r\n  } catch (err) {\r\n    throw new Error(err.message);\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,mCAAmC;;AAE1D;AACA;AACA;AACA;AACA,OAAO,eAAeC,wBAAwBA,CAAA,EAAG;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,aAAa,CAAC;IACrD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;IACzD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAM,IAAIF,KAAK,CAACE,GAAG,CAACC,OAAO,CAAC;EAC9B;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,SAASA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EACrD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,aAAa,CAAC;IACrD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC;IACA,MAAMO,MAAM,GAAG,MAAMV,QAAQ,CAACI,IAAI,CAAC,CAAC;;IAEpC;IACA,IAAIO,YAAY,GAAGD,MAAM;IACzB,IAAIF,QAAQ,EAAE;MACZG,YAAY,GAAGD,MAAM,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACL,QAAQ,KAAKA,QAAQ,CAAC;IACpE;;IAEA;IACA,IAAIC,WAAW,IAAIA,WAAW,CAACK,IAAI,CAAC,CAAC,EAAE;MACrCH,YAAY,GAAGA,YAAY,CAACC,MAAM,CAC/BC,IAAI,IACHA,IAAI,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,WAAW,CAACO,WAAW,CAAC,CAAC,CAAC,IAC3DH,IAAI,CAACK,WAAW,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,WAAW,CAACO,WAAW,CAAC,CAAC,CACrE,CAAC;IACH;IAEA,OAAOL,YAAY;EACrB,CAAC,CAAC,OAAON,GAAG,EAAE;IACZ,MAAM,IAAIF,KAAK,CAACE,GAAG,CAACC,OAAO,CAAC;EAC9B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}